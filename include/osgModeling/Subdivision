/* -*-c++-*- osgModeling - Copyright (C) 2008 Wang Rui <wangray84@gmail.com>
*
* This library is free software; you can redistribute it and/or
* modify it under the terms of the GNU Lesser General Public
* License as published by the Free Software Foundation; either
* version 2.1 of the License, or (at your option) any later version.

* This library is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
* Lesser General Public License for more details.

* You should have received a copy of the GNU Lesser General Public
* License along with this library; if not, write to the Free Software
* Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
*/

#ifndef OSGMODELING_SUBDIVISION
#define OSGMODELING_SUBDIVISION 1

#include <osgModeling/Algorithm>
#include <osgModeling/PolyMesh>

namespace osgModeling {

/** Subdivision base class
 */
class OSGMODELING_EXPORT Subdivision : public AlgorithmCallback
{
public:
    Subdivision() : AlgorithmCallback() {}
    Subdivision( const Subdivision& copy, const osg::CopyOp& copyop=osg::CopyOp::SHALLOW_COPY ):
        AlgorithmCallback(copy, copyop) {}
    META_Object( osgModeling, Subdivision )

    virtual void operator()( PolyMesh* mesh ) {}

protected:
    virtual ~Subdivision() {}
};

class OSGMODELING_EXPORT LoopSubdivision : public Subdivision
{
public:
    LoopSubdivision();
    LoopSubdivision( const LoopSubdivision& copy, const osg::CopyOp& copyop=osg::CopyOp::SHALLOW_COPY );
    META_Object( osgModeling, LoopSubdivision )

    virtual void operator()( PolyMesh* mesh );

protected:
    virtual ~LoopSubdivision();

    void subdivideFace( PolyMesh::Face* f, osg::Vec3Array* pts );

    PolyMesh::FaceList _tempFaces;
};

}

#endif
